// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Config {
  id              Int     @id @default(autoincrement())
  key             String
  value           String
  is_active       Boolean @default(true)
  created_at_unix Int?
  updated_at_unix Int?

  @@map("configs")
}

model User {
  id              Int     @id @default(autoincrement())
  username        String  @unique
  password        String
  is_active       Boolean @default(true)
  is_superadmin   Boolean @default(false)
  created_at_unix Int?
  updated_at_unix Int?

  @@map("users")
}

model Player {
  id              Int     @id @default(autoincrement())
  telegram_id     String  @unique
  username        String?
  first_name      String?
  last_name       String?
  referee_id      Int?
  referral_code   String? @unique
  level           Int     @default(1) // deprecated
  phone_number    String?
  created_at_unix Int?
  updated_at_unix Int?

  @@map("players")
}

model Otp {
  id              Int     @id @default(autoincrement())
  player_id       Int
  otp             String
  is_verified     Boolean @default(false)
  ip_address      String?
  agent           String?
  expired_at_unix Int?
  created_at_unix Int?

  @@map("otps")
}

model PlayerEarning {
  id               Int  @id @default(autoincrement())
  player_id        Int  @unique
  player_level     Int? @default(1)
  passive_per_hour Int
  coins_total      Int
  coins_balance    Int
  coins_spent      Int?

  tap_earning_value            Int?
  tap_earning_energy           Int?
  tap_earning_energy_recovery  Int?
  tap_earning_energy_available Int?
  tap_earning_level            Int? @default(1)
  tap_earning_energy_level     Int? @default(1)
  recharge_earning_energy      Int? @default(6)

  created_at_unix Int?
  updated_at_unix Int?

  @@map("player_earnings")
}

model CardCategory {
  id              Int     @id @default(autoincrement())
  name            String
  is_active       Boolean @default(true)
  created_at_unix Int?
  updated_at_unix Int?

  @@map("card_categories")
}

model Card {
  id                 Int     @id @default(autoincrement())
  name               String
  description        String?
  image              String?
  category_id        Int
  levels             String?
  condition          String?
  available_duration Int?
  is_published       Boolean @default(false)
  published_at_unix  Int?
  created_at_unix    Int?
  updated_at_unix    Int?

  @@map("cards")
}

model CardCombo {
  id              Int     @id @default(autoincrement())
  date            String  @unique
  combination     String?
  reward_coins    Int
  created_at_unix Int?
  updated_at_unix Int?

  @@map("card_combos")
}

model ComboSubmission {
  id              Int     @id @default(autoincrement())
  date            String
  player_id       Int
  combination     String?
  correct_combo   Int
  created_at_unix Int?

  @@map("combo_submissions")
}

model CardLevel {
  id              Int    @id @default(autoincrement())
  card_id         Int
  player_id       Int
  level           Int
  data            String
  created_at_unix Int?
  updated_at_unix Int?

  @@map("card_levels")
}

model PointHistory {
  id              Int     @id @default(autoincrement())
  player_id       Int
  amount          Int
  type            String
  data            String?
  created_at_unix Int?

  @@map("point_histories")
}

model PassiveEarningHistory {
  id              Int     @id @default(autoincrement())
  player_id       Int
  amount          Int
  type            String
  data            String?
  created_at_unix Int?

  @@map("passive_earning_histories")
}

model LevelHistory {
  id              Int     @id @default(autoincrement())
  player_id       Int
  level           Int
  data            String?
  created_at_unix Int?

  @@map("level_histories")
}

model Task {
  id                      Int     @id @default(autoincrement())
  name                    String
  image                   String?
  type                    String?
  reward_coins            Int?
  config                  String?
  is_published            Boolean @default(false)
  requires_admin_approval Boolean @default(false)
  created_at_unix         Int?
  updated_at_unix         Int?

  @@map("tasks")
}

model TaskSubmission {
  id                Int      @id @default(autoincrement())
  player_id         Int
  task_id           Int
  image             String?
  is_approved       Boolean?
  approval_by       Int?
  submitted_at_unix Int
  completed_at_unix Int?

  @@map("task_submissions")
}

model Attendance {
  id              Int  @id @default(autoincrement())
  player_id       Int
  days            Int? @default(1)
  last_attendance Int?

  @@map("attendances")
}

model BroadcastMessage {
  id              Int     @id @default(autoincrement())
  type            String
  message         String
  image_url       String?
  created_at_unix Int?

  @@map("broadcast_messages")
}

model BroadcastMessageMapping {
  id              Int     @id @default(autoincrement())
  message_id      Int
  telegram_id     String
  is_sent         Boolean @default(false)
  is_failed       Boolean @default(false)
  error_message   String?
  created_at_unix Int?
  updated_at_unix Int?

  @@map("broadcast_message_mappings")
}
