// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            Int      @id @default(autoincrement())
  username      String   @unique
  password      String
  is_active     Boolean  @default(true)
  is_superadmin Boolean  @default(false)
  created_at    DateTime @default(now())
  updated_at    DateTime @updatedAt

  @@map("users")
}

model Player {
  id          Int    @id @default(autoincrement())
  telegram_id String @unique
  username    String
  first_name  String
  last_name   String
  created_at  Int
  // created_at  DateTime @default(now())
  // updated_at  DateTime @updatedAt

  @@map("players")
}

model CardCategory {
  id         Int      @id @default(autoincrement())
  name       String
  icon_url   String?
  is_active  Boolean  @default(true)
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  @@map("card_categories")
}

model Card {
  id           Int      @id @default(autoincrement())
  name         String
  icon_url     String
  category_id  Int
  is_active    Boolean  @default(true)
  levels       String?
  requirements String?
  created_at   DateTime @default(now())
  updated_at   DateTime @updatedAt

  @@map("cards")
}

model CardLevel {
  id      Int    @id @default(autoincrement())
  card_id Int
  user_id Int
  level   Int
  data    String

  @@map("card_levels")
}

model Point {
  id              Int @id @default(autoincrement())
  player_id       Int
  amount          Int
  profit_per_hour Int @default(0)
  spend_amount    Int @default(0)

  @@map("points")
}

model PointLog {
  id        Int    @id @default(autoincrement())
  player_id Int
  amount    Int
  type      String
  unix_time Int

  @@map("point_logs")
}

model PointHistory {
  id        Int    @id @default(autoincrement())
  player_id Int
  point_id  Int
  amount    Int
  type      String
  data      String

  @@map("point_histories")
}

model Config {
  id        Int     @id @default(autoincrement())
  key       String
  value     String
  is_active Boolean @default(true)

  @@map("configs")
}
